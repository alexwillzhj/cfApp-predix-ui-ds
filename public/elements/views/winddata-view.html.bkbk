<link rel="import" href="../../bower_components/polymer/polymer.html">
<link rel="import" href="../../bower_components/px-card/px-card.html">
<link rel="import" href="../../bower_components/px-vis-timeseries/px-vis-timeseries.html">
<link rel="import" href="../../bower_components/iron-ajax/iron-ajax.html">

<dom-module id="winddata-view">
  <template>

    <px-card header-text="Wind Data">

      <px-vis-timeseries
        width="1600"
        height="800"
        prevent-resize="false"
        enable-tooltip="true"
        register-location="none"
        include-all-series
        y-axis-config='{"title": "Usage"}'
        series-config='{"cruise-vibration": {
          "type":"line",
          "x": "x",
          "y": "y",
          "yAxisUnit": "Usage",
          "xAxisUnit": "Time"
        }}'
        selection-type= "xy"
        chart-data={{tsChartData}}
      </px-vis-timeseries>
      <!-- Choose one of these iron-ajax elements to load data from the source of your choice.
        First option loads sample data from a json file in the server/sample-data directory. -->
      <!-- <iron-ajax url="/api/time-series/delta-egt/1" id="tsQueryElement" last-response="{{rawTsData}}" auto></iron-ajax>
      -->

      <!-- Second option loads data from a custom wind data microservice.  -->
      <!-- <iron-ajax url="/windy/services/windservices/yearly_data/sensor_id/Compressor-2015:CompressionRatio?order=asc&starttime=1y-ago" id="tsQueryElement" last-response="{{rawTsData}}" auto></iron-ajax> -->

      <!-- Third option loads data from Predix Time Series directly.
        Note this is a POST request, and the time series tag name is hardcoded below. -->
      <iron-ajax url="/predix-api/predix-timeseries/v1/datapoints" id="tsQueryElement" body="{{timeseriesQuery}}" last-response="{{rawTsData}}" method="POST" content-type="application/json" auto></iron-ajax>
    </px-card>
  </template>
  <script>
    Polymer({
      is: 'winddata-view',
      properties: {
        tsChartData: {
          type: Array
        },
        rawTsData: {
          type: Object,
          observer: '_formatDataForChart'
        },
        timeseriesQuery: {
          type: Object,
          value: function() {
            return {
              "start": "1mi-ago",
	      "end": -1,
              "tags": [
                {
                  "name": "location_power_000"
                },{
                  "name": "location_power_forecast_v1_000"
                }/*,{
                  "name": "location_power_002"
                },{
                  "name": "location_power_003"
                },{
                  "name": "location_power_004"
                }*/
              ]
            };
          }
        }
      },
/*
      _formatDataForChart: function(raw) {
        var series = [];
        var datapoints = raw.tags[0].results[0].values; //|| raw.tags[0].results[0].datapoints || raw.tags[1].results[0].datapoints;
        datapoints.forEach(function(point) {
          series.push({x: point[0], y: point[1]});
        });

        this.tsChartData = series;
      }
*/

      _formatDataForChart: function(raw) {
        var series = [];
        var data = raw.tags.map(function(n) {
          return n.results[0].values || n.results[0].datapoints;
        })
       
        var datum = data.map(function(n, i) {
          return n.reduce(function(prev, cur) {
            var x = cur[0];
            var y = cur[1];
            var yAxis = 'y' + i;
            prev[x] = {};
            prev[x][yAxis] = y;
            return prev
          }, {});
        });
 
        var tmp = datum.reduce(function(prev, cur) {
          Object.keys(cur).forEach(function(n) {
            prev[n] = prev[n] ? prev[n] : {};
            prev[n].x = n;
            prev[n] = Object.assign(prev[n], cur[n]);
          })
          return prev;
        }, {})
 
        Object.keys(tmp).forEach(function(key) {
          series.push(tmp[key]);
        });
 
        series = series.sort(function(a, b) {
          return a.x - b.x;
        });
 
        this.tsChartData = series;
      }
 
    });
  </script>
</dom-module>
